
--If this tool will work with other copies of itself (true or false)
--Any roller clicked by the same color player will be treated as the same
setting.coop = true

#include shared/rollForHitLocations

-- head/body pos = {-24.92, 4.47, -17.55} (1,2,6)
-- waist/arms/legs = {-24.92, 4.47, -18.49} (3,4,5)

function finalizeRoll(p)
  --Rotates and Orders Hit Location Die results
    local row1 = {}
    local row2 = {}
    local row3 = {}
      for _, die in ipairs(spawnedDice) do
        local rotX = die.getRotation().x
        local rotY = die.getRotation().y - die.getRotation().y
        local rotZ = die.getRotation().z
        die.setRotationSmooth({rotX, rotY, rotZ}, false, false)
        local value = die.getValue()
          if value == 2 then
            table.insert(row1, {die.setPositionSmooth({-24.92 + #row1 * 0.7, 4.45, -16.31}, false, false)})
          elseif value == 1 or value == 6 or value == 3 then
            table.insert(row2, {die.setPositionSmooth({-24.92 + #row2 * 0.7, 4.45, -17.31}, false, false)})
          elseif value == 4 or value == 5 then
            table.insert(row3, {die.setPositionSmooth({-24.92 + #row3 * 0.7, 4.45, -18.31}, false, false)})
          end
        end

    local color = p.color
    rollingHasStopped = nil --Used for coop communication
    rollInProgress = false --Used for button lockout
    updateGlobalTable(nil)

    --Auto die removal
    if setting.cleanupDelay > -1 then
        --Timer starting
        Timer.destroy("clickRoller_cleanup_"..self.getGUID())
        Timer.create({
            identifier="clickRoller_cleanup_"..self.getGUID(),
            function_name="cleanupDice", function_owner=self,
            delay=setting.cleanupDelay,
        })
    end
end



--After roll actions (printing/cleanup)

--Cleans up dice left after save/load
function onClickCleanUp()
  local zone = getObjectFromGUID('939c02')
  local objectsInZone = zone.getObjects()
  for _, object in ipairs(objectsInZone) do
    if object.tag == "Dice" then
      object.destroy()
    end
  end
end
