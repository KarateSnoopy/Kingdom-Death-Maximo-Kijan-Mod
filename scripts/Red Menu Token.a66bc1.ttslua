
-- Variables -------------------------------------------------------------------
PlayerName = "Player One"
PlayerColor = "red"
color = "red"

-- Gear Positions
gear_clone_pos = {-5.86, 4.19, -7.22}
selector_pos = {-26.22, 4.27, -31.43}

-- Camera Positions
grid_camera = {-25.80, 4.28, -19.75}
hitlocation_camera = {-30.80, 4.28, -19.75}
hitlocation_roller_camera = {-23.33, 4.29, -20.30}

-- Unique to this Player Functions ---------------------------------------------

function onLoad(save_state)
	grid = getObjectFromGUID(Global.getTable("grids").red.guid)

	-- Zones
	zone = getObjectFromGUID(Global.getTable("zones").zoneP1.guid)
	survCard = getObjectFromGUID(Global.getTable('survCards').red.guid)
	survCard_P1 = getObjectFromGUID(Global.getTable('survCards').red.guid)
	survCard_P2 = getObjectFromGUID(Global.getTable('survCards').yellow.guid)
	survCard_P3 = getObjectFromGUID(Global.getTable('survCards').green.guid)
	survCard_P4 = getObjectFromGUID(Global.getTable('survCards').blue.guid)

	zoneShowdown = getObjectFromGUID(Global.getTable('zonesDestruct').zoneShowdown.guid)
	zoneHitLocations = getObjectFromGUID(Global.getTable('zones').deckHitLocations.guid)
	zoneInjuryBoard = getObjectFromGUID(Global.getTable('zones').zoneInjuryBoard.guid)

	bag_spd = getObjectFromGUID(Global.getTable('bags_stats').bag_spd.guid)
	bag_acc = getObjectFromGUID(Global.getTable('bags_stats').bag_acc.guid)
	bag_str = getObjectFromGUID(Global.getTable('bags_stats').bag_str.guid)

	-- Survivor Status
	isDeaf_red = getObjectFromGUID('f847a4')
	isDeaf_yellow = getObjectFromGUID('60e832')
	isDeaf_green = getObjectFromGUID('e5c453')
	isDeaf_blue = getObjectFromGUID('cdbacb')

	-- Dice Rollers
	diceRoller = getObjectFromGUID('abb586')

	-- Weapon selector
	selector = getObjectFromGUID("567941")

	-- Survival Actions
	knockdown = getObjectFromGUID('871d10')
	encourage = getObjectFromGUID('6a9974')
	dash = getObjectFromGUID('e85587')
	surge = getObjectFromGUID('92bf04')
	embolden = getObjectFromGUID('a886d9')
	overcharge = getObjectFromGUID('965d22')

	affinity_red = getObjectFromGUID('122760')
	affinity_green = getObjectFromGUID('77acf4')
	affinity_blue = getObjectFromGUID('f12b7f')

	settings_token = getObjectFromGUID(Global.getTable('user_settings').settings_P1_token.guid)
	sigil = settings_token.getName()

	settings_P1_token = getObjectFromGUID(Global.getTable('user_settings').settings_P1_token.guid)
	sigil_P1 = settings_P1_token.getName()

	settings_P2_token = getObjectFromGUID(Global.getTable('user_settings').settings_P2_token.guid)
	sigil_P2 = settings_P2_token.getName()

	settings_P3_token = getObjectFromGUID(Global.getTable('user_settings').settings_P3_token.guid)
	sigil_P3 = settings_P3_token.getName()

	settings_P4_token = getObjectFromGUID(Global.getTable('user_settings').settings_P4_token.guid)
	sigil_P4 = settings_P4_token.getName()

	color_red = settings_P1_token.getColorTint()
	color_yellow= settings_P2_token.getColorTint()
	color_green = settings_P3_token.getColorTint()
	color_blue = settings_P4_token.getColorTint()

	msg_color = settings_P1_token.getColorTint()
	font_color = settings_P1_token.getColorTint()

	createButtons()
end

function clearButtons()
	self.clearButtons()
end

function callGlobal_spawn_tok_color()
	startLuaCoroutine(Global, "spawn_tok_red")
end

function tokSpawn_coR()
	wait(0.1)
	-- Rear Up
	if cardName == "Rubber Bone Harness" then
		if count_neg_spd >= 1 then
			local stats = {color = color, stat = "spd", modifier = "pos", num = count_neg_spd, phase = nil}
			Global.setTable('stats_red', stats)
			callGlobal_spawn_tok_color()
		end
		wait(count_neg_spd)
		if count_neg_str >= 1 then
			local stats = {color = color, stat = "str", modifier = "pos", num = count_neg_str, phase = nil}
			Global.setTable('stats_red', stats)
			callGlobal_spawn_tok_color()
		end
		wait(count_neg_str)
		if count_neg_acc >= 1 then
			local stats = {color = color, stat = "acc", modifier = "pos", num = count_neg_acc, phase = nil}
			Global.setTable('stats_red', stats)
			callGlobal_spawn_tok_color()
		end
		wait(count_neg_acc)
		if count_neg_lck >= 1 then
			local stats = {color = color, stat = "lck", modifier = "pos", num = count_neg_lck, phase = nil}
			Global.setTable('stats_red', stats)
			callGlobal_spawn_tok_color()
		end
		wait(count_neg_lck)
		if count_neg_mov >= 1 then
			local stats = {color = color, stat = "mov", modifier = "pos", num = count_neg_mov, phase = nil}
			Global.setTable('stats_red', stats)
			callGlobal_spawn_tok_color()
		end
		wait(count_neg_mov)
		if count_neg_eva >= 1 then
			local stats = {color = color, stat = "eva", modifier = "pos", num = count_neg_eva, phase = nil}
			Global.setTable('stats_red', stats)
			callGlobal_spawn_tok_color()
		end
	end
	return 1
end

function redVial(object, player_color)
	broadcastToColor("You gained (+1) Survival ~ Archive Red Vial", player_color, msg_color)
	broadcastToColor(sigil .. "  Red Vial  " .. sigil, player_color, msg_color)
	changeSurvivors("survival", 1, grid)
	set_bandages_green()

	clearMenuButtons()
	menuTable = {}
	createButtons()
end

function sub_spd1()
	wait(0.25)
	local stats = {color = color, stat = "spd", modifier = "neg", num = 1, phase = 'endOfattack'}
	Global.setTable('stats_red', stats)
	startLuaCoroutine(Global, "spawn_tok_red")
	return 1
end

function add_acc1()
	wait(0.5)
	local stats = {color = color, stat = "acc", modifier = "pos", num = 1, phase = 'endOfattack'}
	Global.setTable('stats_red', stats)
	startLuaCoroutine(Global, "spawn_tok_red")
	return 1
end

function add_acc2()
	wait(0.5)
	local stats = {color = color, stat = "acc", modifier = "pos", num = 2, phase = 'endOfattack'}
	Global.setTable('stats_red', stats)
	startLuaCoroutine(Global, "spawn_tok_red")
	return 1
end

function add_str1()
	wait(0.75)
	local stats = {color = color, stat = "str", modifier = "pos", num = 1, phase = 'endOfattack'}
	Global.setTable('stats_red', stats)
	startLuaCoroutine(Global, "spawn_tok_red")
	return 1
end

-- Main Menu Buttons
function createButtons()

	msg_color = settings_P1_token.getColorTint()
   font_color = settings_P1_token.getColorTint()

	btns_main_menu = {
		rotation 		= btn_rotation,
		click_function = "",
		function_owner = self,
		label 			= "",
		position 		= {},
		scale 			= {0.5, 0.5, 0.5},
		width 			= 7300,
		height 			= 1100,
		color 			= {0, 0, 0},
		font_color		= font_color,
		font_size 		= 750
	}

	btns_main_menu.position = { - 0.3, 0.2, - 9.5} ; btns_main_menu.label = "Once ~ Showdown" ; btns_main_menu.click_function = "oncePerShowdown"
	self.createButton(btns_main_menu)

	btns_main_menu.position = { - 0.3, 0.2, - 8.3} ; btns_main_menu.label = "Consumables" ; btns_main_menu.click_function = "consumables"
	self.createButton(btns_main_menu)

	btns_main_menu.position = { - 0.3, 0.2, - 7.0} ; btns_main_menu.label = "Defensive" ; btns_main_menu.click_function = "defensiveButtons"
	self.createButton(btns_main_menu)

	btns_main_menu.position = { - 0.3, 0.2, - 5.8} ; btns_main_menu.label = "Specials" ; btns_main_menu.click_function = "specials_Buttons"
	self.createButton(btns_main_menu)

	btns_main_menu.position = { - 0.2, 0.2, - 4.6} ; btns_main_menu.label = "Survival Actions" ; btns_main_menu.click_function = "survival_buttons"
	self.createButton(btns_main_menu)

	btns_main_menu.position = { - 0.3, 0.2, - 2.8} ; btns_main_menu.label = "Equip Weapon" ; btns_main_menu.click_function = "createMenuWeapons"
	btns_main_menu.scale = {0.7, 0.7, 0.7} ; btns_main_menu.width = 5000
	self.createButton(btns_main_menu)
end

function encourage_select_via_params(params)
	encourage_select(params.object, params.player_color)
end

#include shared/menuToken