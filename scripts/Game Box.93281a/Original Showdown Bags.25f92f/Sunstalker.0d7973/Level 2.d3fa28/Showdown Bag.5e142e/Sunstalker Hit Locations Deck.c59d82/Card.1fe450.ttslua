function criticalWoundEffect()
	getMonster1(deck, name, params)
	getMonster2(deck, name, params)
end

--Finds a named card, in a deck, in a zone, then draws it to specified location.
function getMonster1(deck, name, params)
	    print("[b]---Items In Zone---[/b]")
		zonesTable = Global.getTable('zones')
		local zone = getObjectFromGUID(zonesTable.deckMonsterResources.guid)
	    local objectsInZone = zone.getObjects()
	    if #objectsInZone == 0 then
	        print("Scripting Zone Empty.")
	    else
	        for _, object in ipairs(objectsInZone) do
	            local name = object.getName()
	            if name == "Sunstalker Resources Deck" then
					deck = object
					break
	                print("Sunstalker Resources Deck Found")
	            else
	                print("Sunstalker Resources Deck Not Found.")
	            end
			end
			if deck == nil then
		        print("No deck was found.")
		    else
		        print("Deck found.")
		        local cardsInDeck = deck.getObjects()
		        for i, card in ipairs(cardsInDeck) do
		            if card.nickname == "Small Sunteeth" then
					    print("Small Sunteeth Found")
						deck.takeObject({
							guid = card.guid,
							position={7.60, 4.19, -11.03},
							callback="flipCard",
							callback_owner=Global,
						})
						Global.call('addBroadcast', {"crit", {gear = "You gained 1 Small Sunteeth", effect = ""}})
						break
		            end
					if i == #cardsInDeck then
						Global.call('addBroadcast', {"crit", {gear = "There are no more Sunteeth", effect = ""}})
					end
		        end
		    end
		    print("[b]----------------------[/b]")
		end
	end

    --Finds a named card, in a deck, in a zone, then draws it to specified location.
    function getMonster2(deck, name, params)
    	    print("[b]---Items In Zone---[/b]")
    		zonesTable = Global.getTable('zones')
    		local zone = getObjectFromGUID(zonesTable.deckMonsterResources.guid)
    	    local objectsInZone = zone.getObjects()
    	    if #objectsInZone == 0 then
    	        print("Scripting Zone Empty.")
    	    else
    	        for _, object in ipairs(objectsInZone) do
    	            local name = object.getName()
    	            if name == "Sunstalker Resources Deck" then
    					deck = object
    					break
    	                print("Sunstalker Resources Deck Found")
    	            else
    	                print("Sunstalker Resources Deck Not Found.")
    	            end
    			end
    			if deck == nil then
    		        print("No deck was found.")
    		    else
    		        print("Deck found.")
    		        local cardsInDeck = deck.getObjects()
    		        for i, card in ipairs(cardsInDeck) do
    		            if card.nickname == "Shark Tongue" then
    					    print("Shark Tongue found")
    						deck.takeObject({
    							guid = card.guid,
    							position={7.60, 4.19, -11.03},
    							callback="flipCard",
    							callback_owner=Global,
    						})
    						Global.call('addBroadcast', {"crit", {gear = "You gained 1 Shark Tongue", effect = ""}})
    						break
    		            end
    					if i == #cardsInDeck then
    						Global.call('addBroadcast', {"crit", {gear = "There are no more Shark Tongues", effect = ""}})
    					end
    		        end
    		    end
    		    print("[b]----------------------[/b]")
    		end
end

function woundEffect()
end

function reflexEffect()
end

function failureEffect()
end

function addStatModifier()
    broadcastToAll("Are you attacking from the Light?", {1,1,1})
    createButton()
end

function createButton()
    self.createButton{index = 0, click_function = 'getStatToken', function_owner = self,
label = 'Attacking from the Light', position = {x = 0, y = 2, z = -1.2}, rotation = {x = 0, y = 0, z = 0},
scale = {x = 0.5, y = 1, z = 0.5}, width = 2000, height = 400, font_size = 200,
color = {r = 1, g = 1, b = 1, a = 1}, font_color = {r = 0, g = 0, b = 0, a = 1}}
end

function getStatToken()
	local object = getObjectFromGUID('06fe95')
    local cleanUpList = Global.getTable('cleanUpHitLocation')
    table.insert(cleanUpList, object.clone({position = {6.79, 6, 0.02}}))
        broadcastToAll("(-5) Strength to Wound this location Calculated.", {1,1,1})
	Global.setTable('cleanUpHitLocation', cleanUpList)
end
