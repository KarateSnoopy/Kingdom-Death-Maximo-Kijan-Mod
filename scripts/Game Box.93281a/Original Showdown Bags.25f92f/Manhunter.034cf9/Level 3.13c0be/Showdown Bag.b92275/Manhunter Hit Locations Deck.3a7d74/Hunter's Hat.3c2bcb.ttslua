
function criticalWoundEffect()
	getRareGear(deck, name, params)
	getMonsterResource(deck, name, params)
	Global.call('addBroadcast', {"crit", {gear = "Archive this Card", effect = ""}})
end

function woundEffect()
end

function failureEffect()
end

function reflexEffect()
end

function addStatModifier()
end


--Finds a named card, in a deck, in a zone, then draws it to specified location.
function getRareGear(deck, name, params)
	    print("[b]---Items In Zone---[/b]")
		zonesTable = Global.getTable('zones')
		local zone = getObjectFromGUID(zonesTable.deckRareGear.guid)
	    local objectsInZone = zone.getObjects()
	    if #objectsInZone == 0 then
	        print("Scripting Zone Empty.")
	    else
	        for _, object in ipairs(objectsInZone) do
	            local name = object.getName()
	            if name == "Rare Gear Deck" then
					deck = object
					break
	                print("Rare Gear Deck Found")
	            else
	                print("Rare Gear Deck Not Found.")
	            end
			end
			if deck == nil then
		        print("No deck was found.")
		    else
		        print("Deck found.")
		        local cardsInDeck = deck.getObjects()
		        for i, card in ipairs(cardsInDeck) do
		            if card.nickname == "Manhunter's Hat" then
					    print("Manhunter's Hat Found")
						deck.takeObject({
							guid = card.guid,
							position={7.60, 4.19, -11.03},
							callback="flipCard",
							callback_owner=Global,
						})
						Global.call('addBroadcast', {"crit", {gear = "You gained the Manhunter's Hat", effect = ""}})
						break
		            end
					if i == #cardsInDeck then
						Global.call('addBroadcast', {"crit", {gear = "You already have the Manhunter's Hat", effect = ""}})
					end
		        end
		    end
		    print("[b]----------------------[/b]")
		end
	end

    --Finds a named card, in a deck, in a zone, then draws it to specified location.
    function getMonsterResource(deck, name, params)
    	    print("[b]---Items In Zone---[/b]")
    		zonesTable = Global.getTable('zones')
    		local zone = getObjectFromGUID(zonesTable.deckStrangeResources.guid)
    	    local objectsInZone = zone.getObjects()
    	    if #objectsInZone == 0 then
    	        print("Scripting Zone Empty.")
    	    else
    	        for _, object in ipairs(objectsInZone) do
    	            local name = object.getName()
    	            if name == "Strange Resources Deck" then
    					deck = object
    					break
    	                print("Strange Resources Deck Found")
    	            else
    	                print("Strange Resources Deck Not Found.")
    	            end
    			end
    			if deck == nil then
    		        print("No deck was found.")
    		    else
    		        print("Deck found.")
    		        local cardsInDeck = deck.getObjects()
    		        for i, card in ipairs(cardsInDeck) do
    		            if card.nickname == "Leather" then
    					    print("Leather found")
    						deck.takeObject({
    							guid = card.guid,
    							position={7.60, 4.19, -11.03},
    							callback="flipCard",
    							callback_owner=Global,
    						})
							Global.call('addBroadcast', {"crit", {gear = "You gained 1 Leather Strange Resource", effect = ""}})
    						break
    		            end
    					if i == #cardsInDeck then
							Global.call('addBroadcast', {"crit", {gear = "You already have the Settlement limit in Leather", effect = ""}})
    					end
    		        end
    		    end
    		    print("[b]----------------------[/b]")
    		end
    	end
