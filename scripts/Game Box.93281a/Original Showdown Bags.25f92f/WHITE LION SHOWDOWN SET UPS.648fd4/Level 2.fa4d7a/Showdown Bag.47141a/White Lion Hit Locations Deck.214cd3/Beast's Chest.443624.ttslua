function criticalWoundEffect()
	Global.call('addBroadcast', {"crit", {gear = "Roll 1d10 ~ if you roll a 10 ~ The White Lion dies instantly!", effect = ""}})
	getMonsterResource(deck, name, params)
end

--Finds a Deck in a Zone then draws a random resource from it
function getMonsterResource(deck, name, params)
	    print("[b]---Items In Zone---[/b]")
		zonesTable = Global.getTable('zones')
		local zone = getObjectFromGUID(zonesTable.deckMonsterResources.guid)
	    local objectsInZone = zone.getObjects()
    		for _, obj in ipairs(objectsInZone) do
					obj.shuffle()
					obj.takeObject({
						position={7.60, 4.19, -11.03},
						top=true,
						callback="flipCard",
						callback_owner=Global,
					})
					Global.call('addBroadcast', {"crit", {gear = "You gained 1 Random White Lion Resource", effect = ""}})
					break
			end
end

function woundEffect()
end

function failureEffect()
    broadcastToAll('____________________ \u{2620} !!! Failure Reaction Triggered !!! \u{2620} ____________________', {1,1,1})
    startLuaCoroutine(self, "broadcastDelay1")
    startLuaCoroutine(self, "broadcastDelay2")
end

function broadcastDelay1()
    wait(2)
    broadcastToAll("\u{2658} Full Move the White Lion forward in a straight line \u{2658}", {1,1,1})
    return 1
end

function broadcastDelay2()
    wait(4)
    broadcastToAll('Any Survivor passed over suffers Grab', {1,1,1})
    return 1
end

function wait(time)
	local start = os.time()
	--each frame the coroutine is given control back, but we immediately call coroutine.yield() again until we exceed the time limit
	repeat
		coroutine.yield(0)
	until os.time() > start + time
end

function reflexEffect()
end

function addStatModifier()
end