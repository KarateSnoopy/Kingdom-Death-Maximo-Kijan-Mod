function onLoad()
	if string.find(self.getDescription(), "Player") then
		createButtons()
	end
end

function onObjectDropped(player_color, dropped_object)
	if dropped_object.getGUID() == self.getGUID() then
		set_color_tint()
		createButtons()
	end
end

function set_color_tint()
	local physics_pos = self.getPosition()
	self.setColorTint({1,1,1})
	local hitList = Physics.cast({
		origin={physics_pos.x, physics_pos.y, physics_pos.z},
		direction={0,1,0},
		type=2,
		size={1.3, 1.3, 1.3},
		max_distance = 0
	})
	for _, entry in ipairs(hitList) do
		if entry.hit_object.getName() == "Portrait Frame P1" then
			tint_r = tonumber((entry.hit_object.getColorTint().r * 255))
			tint_g = tonumber((entry.hit_object.getColorTint().g * 255))
			tint_b = tonumber((entry.hit_object.getColorTint().b * 255))
			self.setDescription("Player One")

		elseif entry.hit_object.getName() == "Portrait Frame P2" then
			tint_r = tonumber((entry.hit_object.getColorTint().r * 255))
			tint_g = tonumber((entry.hit_object.getColorTint().g * 255))
			tint_b = tonumber((entry.hit_object.getColorTint().b * 255))
			self.setDescription("Player Two")

		elseif entry.hit_object.getName() == "Portrait Frame P3" then
			tint_r = tonumber((entry.hit_object.getColorTint().r * 255))
			tint_g = tonumber((entry.hit_object.getColorTint().g * 255))
			tint_b = tonumber((entry.hit_object.getColorTint().b * 255))
			self.setDescription("Player Three")

		elseif entry.hit_object.getName() == "Portrait Frame P4" then
			tint_r = tonumber((entry.hit_object.getColorTint().r * 255))
			tint_g = tonumber((entry.hit_object.getColorTint().g * 255))
			tint_b = tonumber((entry.hit_object.getColorTint().b * 255))
			self.setDescription("Player Four")
		end
	end

	if tint_r ~= nil then
		rs = (255 - tint_r) * 0.75
		rt = (tint_r + rs) / 255

		gs = (255 - tint_g) * 0.75
		gt = (tint_g + gs) / 255

		bs = (255 - tint_b) * 0.75
		bt = (tint_b + bs) / 255
	end

	if rt ~= nil then
		self.highlightOn({rt, gt, bt}, 1000)
		self.setColorTint({rt, gt, bt})
	end
	tint_r = nil
end

function createButtons()
	local pos = self.getPosition()
	if pos.z < -30 then return end
	clearButtons()
	btn_params = {
		click_function = "dud",
		function_owner = self,
		label 			= "",
		position 		= {0, 0.2, 0},
		scale 			= {0.5, 0.5, 0.5},
		width 			= 2000,
		height 			= 2000,
		font_size 		= 450,
		color 			= {0, 0, 0, 0},
		font_color 		= {1, 1, 1, 100},
	}

	local desc = self.getDescription()
	if desc == "Player One" then
		settings_token = getObjectFromGUID(Global.getTable('user_settings').settings_P1_token.guid)
		zone = getObjectFromGUID(Global.getTable('zones').zoneP1.guid)
		grid = getObjectFromGUID(Global.getTable('grids').red.guid)
		grid.call("checkWeapon")
		weaponGUID = grid.getVar("weaponGUID")
		local weapon = grid.getTable("weapon")
		if weapon.name == "FistAndTooth" then
			equipped_weapon = "Fist & Tooth"
		else
			for _, weapon in ipairs(zone.getObjects()) do
				if weapon.getGUID() == weaponGUID then
					equipped_weapon = weapon.getName()
				end
			end
		end
		btn_params.click_function = "grid_camera_P1"

	elseif desc == "Player Two" then
		settings_token = getObjectFromGUID(Global.getTable('user_settings').settings_P2_token.guid)
		zone = getObjectFromGUID(Global.getTable('zones').zoneP2.guid)
		grid = getObjectFromGUID(Global.getTable('grids').yellow.guid)
		grid.call("checkWeapon")
		weaponGUID = grid.getVar("weaponGUID")
		local weapon = grid.getTable("weapon")
		if weapon.name == "FistAndTooth" then
			equipped_weapon = "Fist & Tooth"
		else
			for _, weapon in ipairs(zone.getObjects()) do
				if weapon.getGUID() == weaponGUID then
					equipped_weapon = weapon.getName()
				end
			end
		end
		btn_params.click_function = "grid_camera_P2"

	elseif desc == "Player Three" then
		settings_token = getObjectFromGUID(Global.getTable('user_settings').settings_P3_token.guid)
		zone = getObjectFromGUID(Global.getTable('zones').zoneP3.guid)
		grid = getObjectFromGUID(Global.getTable('grids').green.guid)
		grid.call("checkWeapon")
		weaponGUID = grid.getVar("weaponGUID")
		local weapon = grid.getTable("weapon")
		if weapon.name == "FistAndTooth" then
			equipped_weapon = "Fist & Tooth"
		else
			for _, weapon in ipairs(zone.getObjects()) do
				if weapon.getGUID() == weaponGUID then
					equipped_weapon = weapon.getName()
				end
			end
		end
		btn_params.click_function = "grid_camera_P3"

	elseif desc == "Player Four" then
		settings_token = getObjectFromGUID(Global.getTable('user_settings').settings_P4_token.guid)
		zone = getObjectFromGUID(Global.getTable('zones').zoneP4.guid)
		grid = getObjectFromGUID(Global.getTable('grids').blue.guid)
		grid.call("checkWeapon")
		weaponGUID = grid.getVar("weaponGUID")
		local weapon = grid.getTable("weapon")
		if weapon.name == "FistAndTooth" then
			equipped_weapon = "Fist & Tooth"
		else
			for _, weapon in ipairs(zone.getObjects()) do
				if weapon.getGUID() == weaponGUID then
					equipped_weapon = weapon.getName()
				end
			end
		end
		btn_params.click_function = "grid_camera_P4"
	end

	self.createButton(btn_params)

	name_params = {
		click_function = "dud",
		function_owner = self,
		label 			= "",
		position 		= {},
		scale 			= {1, 1, 1},
		width 			= 2000,
		height 			= 400,
		font_size 		= 350,
		color 			= {0, 0, 0},
		font_color 		= {}
	}

	if zone ~= nil then
		for _, obj in ipairs(zone.getObjects()) do
			if string.find(obj.getDescription(), "SurvivorSheet") then
				name = obj.getName()
			end
		end
	end

	local sigil = settings_token.getName()

	name_params.font_color = settings_token.getColorTint()
	name_params.label = equipped_weapon
	name_params.position = {0, 0.1, -4}
	name_params.font_size = 250
	self.createButton(name_params)

	if name ~= nil then
		name_params.label = tostring(" " .. sigil .. "  " .. name .. "  " .. sigil .. " ")
		name_params.position = {0, 0.1, -4.7}
		name_params.font_size = 275
		self.createButton(name_params)
	end
end

function grid_camera_P1(object, player)
	local parameters = {}
	parameters.position = { - 30.80, 4.28, - 19.75}
	Player[player].lookAt(parameters)
end

function grid_camera_P2(object, player)
	local parameters = {}
	parameters.position = { - 14.16, 4.28, - 19.78}
	Player[player].lookAt(parameters)
end

function grid_camera_P3(object, player)
	local parameters = {}
	parameters.position = {16.06, 4.28, - 19.76}
	Player[player].lookAt(parameters)
end

function grid_camera_P4(object, player)
	local parameters = {}
	parameters.position = {32.64, 4.29, - 19.75}
	Player[player].lookAt(parameters)
end

function clearButtons()
	self.clearButtons()
end

function dud() end
