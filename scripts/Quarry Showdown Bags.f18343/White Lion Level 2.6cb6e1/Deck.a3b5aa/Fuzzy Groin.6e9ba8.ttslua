

function criticalWoundEffect()
	getVars()
	getMonsterResource()
	gain_the_priority_target_token()
	local obj = getObjectFromGUID(Global.getTable('tokSpawn').pos_dmg.guid)
	local var = ""
	obj.getVar("phase")
	obj.setVar("phase", var)
	obj.call("spawn_token")
	Global.call('addBroadcast', {"crit", {gear = "The White Lion gained a (+1) Damage Token", effect = ""}})
	Global.call('addBroadcast', {"crit", {gear = "Persistent Injury ~ Lost Ding Dong ~ Keep in Play", effect = "", effect2 = ""}})
	self.setPositionSmooth({-4.18, 4.34, -21.56}, false, false)
end

function gain_the_priority_target_token()
	local zoneShowdown = getObjectFromGUID(Global.getTable('zonesDestruct').zoneShowdown.guid)
	hasPriority = false
	cannot_be_removed = false
	for _, tok in ipairs(zoneShowdown.getObjects()) do
		if tok.getName() == "Priority Target" then
			hasPriority = true
			priority_target = tok
		end
	end
	for _, tok in ipairs(zoneShowdown.getObjects()) do
		if string.find(tok.getDescription(), "permanent") then
			cannot_be_removed = true
		end
	end
	if cannot_be_removed then
		Global.call('addBroadcast', {"wound_reaction", {gear = "A Survivor already has the Priority Target Permanently ~ From a Game Effect", effect = ""}})
		return
	end
	for _, surv in ipairs(zoneShowdown.getObjects()) do
		if surv.getName() == PlayerName then
			local pos = surv.getPosition()
			if hasPriority then
				surv.translate({0,2,0})
				priority_target.setPosition(pos)
				priority_target.setDescription('permanent')
			else
				local obj = getObjectFromGUID('3bc58d')
				local objPos = obj.getPosition()
				local priority_target = obj.clone(objPos)
				surv.translate({0,2,0})
				priority_target.setPosition(pos)
				priority_target.setDescription('permanent')
			end
		end
	end
end

function getStatToken()
	local obj = getObjectFromGUID(Global.getTable('tokSpawn').pos_dmg.guid)
	obj.call("spawn_token")
	Global.call('addBroadcast', {"crit", {gear = "The White Lion gained a (+1) Damage Token", effect = ""}})

end

function getMonsterResource()
	local tbl = {cardName = "Lion Testes", zone = getObjectFromGUID(Global.getTable('zones').deckMonsterResources.guid), deck = ""}
	Global.setTable("card", tbl)
	Global.setTable("pos_toSpawn", pos)
	Global.call("get_Card")
	local bool = Global.getVar("card_Found")
	if bool then
		Global.call('addBroadcast', {"crit", {gear = "You gained 1 Lion Testes", effect = ""}})
	else
		Global.call('addBroadcast', {"crit", {gear = "You already hacked off the Lion's Testes", effect = ""}})
	end
end

function getVars()
	local card = getObjectFromGUID(Global.getTable("persistentCard").card.guid)
	local bool = card.getVar("isSurging_persistentCard")
	if bool then
		roller = getObjectFromGUID(Global.getTable("rollers").left.guid)
	end
	if not bool then
		roller = getObjectFromGUID(Global.getTable("rollers").right.guid)
	end

	grid = roller.getVar("grid")
	zone = grid.getVar("zonePlayer")
	pos = grid.getTable("gained_resource_pos")
	PlayerName = grid.getVar("PlayerName")
end

function woundEffect()
end

function failureEffect()
end

function reflexEffect()
end

function addStatModifier()
end

-- groin
