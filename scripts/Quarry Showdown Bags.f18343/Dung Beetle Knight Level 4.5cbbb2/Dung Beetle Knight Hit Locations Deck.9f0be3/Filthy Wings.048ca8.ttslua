function criticalWoundEffect()
     Global.call('addBroadcast', {"crit", {gear = "Persistent Injury ~ Broken Wings ~ Keep in Play", effect = ""}})
	 getMonsterResource(deck, name, params)
	 getStatToken()
end

function getStatToken()
	local object = getObjectFromGUID('9dff6c')
	local desc = object.getDescription()
	object.setDescription('end of showdown')
    	object.setScale({0.43, 1.00, 0.43})
			local tghStat = Global.getTable('tghStat')
        		table.insert(tghStat, object.clone({
				position = {-12.06, 4.42, 0.51 + #tghStat * -1}}))
				Global.call('addBroadcast', {"crit", {gear = "The Dung Beetle Knight gained a (-1) Toughness Token", effect = ""}})
    	object.setScale({0.32, 1.00, 0.32})
	Global.setTable('tghStat', tghStat)
end


--Finds a named card, in a deck, in a zone, then draws it to specified location.
function getMonsterResource(deck, name, params)
	    print("[b]---Items In Zone---[/b]")
		zonesTable = Global.getTable('zones')
		local zone = getObjectFromGUID(zonesTable.deckMonsterResources.guid)
	    local objectsInZone = zone.getObjects()
	    if #objectsInZone == 0 then
	        print("Scripting Zone Empty.")
	    else
	        for _, object in ipairs(objectsInZone) do
	            local name = object.getName()
	            if name == "Dung Beetle Knight Resources Deck" then
					deck = object
					break
	                print("Dung Beetle Knight Resources Deck Found")
	            else
	                print("Dung Beetle Knight Resources Deck Not Found.")
	            end
			end
			if deck == nil then
		        print("No deck was found.")
		    else
		        print("Deck found.")
		        local cardsInDeck = deck.getObjects()
		        for i, card in ipairs(cardsInDeck) do
		            if card.nickname == "Elytra" then
					    print("Elytra found")
						deck.takeObject({
							guid = card.guid,
							position={7.60, 4.19, -11.03},
							callback="flipCard",
							callback_owner=Global,
						})
						Global.call('addBroadcast', {"crit", {gear = "You gained 1 Elytra", effect = ""}})
						break
				end
		            if i == #cardsInDeck then
						Global.call('addBroadcast', {"crit", {gear = "There are no Elytra left", effect = ""}})
		            end
				end
		    print("[b]----------------------[/b]")
		end
	end
end

function woundEffect()
end

function failureEffect()
    broadcastToAll('____________________ \u{2620} !!! Failure Reaction Triggered !!! \u{2620} ____________________', {1,1,1})
    startLuaCoroutine(self, "broadcastDelay1")
    startLuaCoroutine(self, "broadcastDelay2")
end

function broadcastDelay1()
    wait(2)
    broadcastToAll('The Dung Beetle Knight turns away from you and flaps its wings', {1,1,1})
    return 1
end

function broadcastDelay2()
    wait(4)
    broadcastToAll('All Survivors in the Blind Spot suffer Knockback 7', {1,1,1})
    return 1
end

function wait(time)
	local start = os.time()
	--each frame the coroutine is given control back, but we immediately call coroutine.yield() again until we exceed the time limit
	repeat
		coroutine.yield(0)
	until os.time() > start + time
end

function reflexEffect()
end

function addStatModifier()
end
