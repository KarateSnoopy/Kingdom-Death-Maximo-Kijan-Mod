function criticalWoundEffect()
	self.setPositionSmooth({1.01, 4.23, -21.27})
    Global.call('addBroadcast', {"crit", {gear = "Persistent Injury ~ Jitters ~ Keep in Play", effect = ""}})
end

function woundEffect()
end

function failureEffect()
	Global.call('addBroadcast', {"failure", {gear = "♘ The Lion Knight turns to face you ♘", effect = ""}})
	 obj = getObjectFromGUID(Global.getTable('tokSpawn').neg_tgh.guid)
	local var = "endOfattack"
	obj.getVar("phase")
	obj.setVar("phase", var)
	startLuaCoroutine(self, "addStat_coR")
	Global.call('addBroadcast', {"failure", {gear = "He gained (+2) Toughness until the end of your attack", effect = ""}})
end

function addStat_coR()
	obj.call('spawn_token')
	wait(0.50)
	obj.call('spawn_token')
	return 1
end

-- Coroutine timer
function wait(time)
	local start = os.time()
	--each frame the coroutine is given control back, but we immediately call coroutine.yield() again until we exceed the time limit
	repeat coroutine.yield(0) until os.time() > start + time
end


function reflexEffect()
end

function addStatModifier()
	getVars()
	if hasKatar then
		broadcastToAll("You hit with a Katar ~ End your attack and you are Knocked Down", msg_color)
	end
end

function getVars()
	card = getObjectFromGUID(Global.getTable("persistentCard").card.guid)
	local bool = card.getVar("isSurging_persistentCard")
	if bool then
		roller = getObjectFromGUID(Global.getTable("rollers").left.guid)
	end
	if not bool then
		roller = getObjectFromGUID(Global.getTable("rollers").right.guid)
	end

	grid = roller.getVar("grid")
	msg_color = grid.getTable("msg_color")
	zone = grid.getVar("zonePlayer")
	grid.call("checkWeapon")
	weaponGUID = grid.getVar("weaponGUID")
	hasKatar = false
	for _, gear in ipairs(zone.getObjects()) do
		if string.find(gear.getDescription(), "katar") and gear.getGUID() == weaponGUID then
			hasKatar = true
		end
	end
end