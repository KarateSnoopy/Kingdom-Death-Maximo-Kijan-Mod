function onLoad()
	createButtons()
	zoneShowdown = getObjectFromGUID(Global.getTable('zonesDestruct').zoneShowdown.guid)
	zoneInjuryBoard = getObjectFromGUID(Global.getTable('zones').zoneInjuryBoard.guid)
	zoneAIBoard = getObjectFromGUID(Global.getTable('zonesDestruct').zoneAIBoard.guid)
end

function createButtons()
	btn_params = {
		click_function = "",
		function_owner = self,
		label 			= "",
		position			= {},
		scale 			= {0.5, 0.5, 0.5},
		width 			= 2000,
		height 			= 400,
		font_size 		= 300,
		color 			= {0,0,0,0},
		font_color 		= {1,1,1,100}
	}

		btn_params.position = {0, 0.1, -3.15}
		btn_params.label = "Bear Fruit"
		btn_params.click_function = "bear_fruit"
		self.createButton(btn_params)

		btn_params.position = {0, 0.1, -2.65}
		btn_params.label = "Return Fruit"
		btn_params.click_function = "return_fruit"
		self.createButton(btn_params)

		btn_params.position = {0, 0.1, -2.15}
		btn_params.label = "Growth"
		btn_params.click_function = "growth"
		self.createButton(btn_params)

end

function bear_fruit()
	for _, obj in ipairs(zoneShowdown.getObjects()) do
		local posY = obj.getPosition().y
		if obj.getName() == "Nightmare Fruit 1" and posY > 6 then
			obj.setLock(false)
			obj.setPosition({1.21, 4.38, -2.47})
			destroy_spd_token()
			break
		elseif obj.getName() == "Nightmare Fruit 2" and posY > 6 then
			obj.setLock(false)
			obj.setPosition({1.21, 4.38, -2.47})
			destroy_spd_token()
			break
		elseif obj.getName() == "Nightmare Fruit 3" and posY > 6 then
			obj.setLock(false)
			obj.setPosition({1.21, 4.38, -2.47})
			destroy_spd_token()
			break
		elseif obj.getName() == "Nightmare Fruit 4" and posY > 6 then
			obj.setLock(false)
			obj.setPosition({1.21, 4.38, -2.47})
			destroy_spd_token()
			break
		elseif obj.getName() == "Nightmare Fruit 5" and posY > 6 then
			obj.setLock(false)
			obj.setPosition({1.21, 4.38, -2.47})
			destroy_spd_token()
			break
		elseif obj.getName() == "Nightmare Fruit 6" and posY > 6 then
			obj.setLock(false)
			obj.setPosition({1.21, 4.38, -2.47})
			destroy_spd_token()
			break
		end
	end
end

function destroy_spd_token()
	local bool = return_bool(hasDreamer)
	if bool then
		for _, tok in ipairs(zoneAIBoard.getObjects()) do
			if string.find(tok.getDescription(), "dreamers fruit") then
				broadcastToAll("Dreamer's Fruit : (-1) Speed", {1,1,1})
				tok.destroy()
				break
			end
		end
	end
end

function return_bool(hasDreamer)
	hasDreamer = false
	for _, card in ipairs(zoneInjuryBoard.getObjects()) do
		if card.getName() == "Dreamer's Fruit" then
			hasDreamer = true
		end
	end
	return hasDreamer
end

function spawn_spd_token()
	if return_bool(hasDreamer) then
		local obj = getObjectFromGUID(Global.getTable('tokSpawn').pos_spd.guid)
		local var = "dreamers fruit"
		obj.getVar("phase")
		obj.setVar("phase", var)
		obj.call("spawn_token")
	end
end

function return_fruit()
	for _, obj in ipairs(zoneShowdown.getObjects()) do
		if string.find(obj.getName(), "Nightmare Fruit") then
			obj.setLock(true)
			obj.setRotation({0,180,0})
		end
		if obj.getName() == "Nightmare Fruit 1" then
			obj.setPosition({4.62, 10.41, 15.89})
		elseif obj.getName() == "Nightmare Fruit 2" then
			obj.setPosition({4.52, 9.21, 15.84})
		elseif obj.getName() == "Nightmare Fruit 3" then
			obj.setPosition({3.44, 8.28, 15.73})
		elseif obj.getName() == "Nightmare Fruit 4" then
			obj.setPosition({2.71, 6.14, 15.58})
		elseif obj.getName() == "Nightmare Fruit 5" then
			obj.setPosition({-3.07, 6.93, 15.67})
		elseif obj.getName() == "Nightmare Fruit 6" then
			obj.setPosition({-2.35, 9.17, 15.59})
		end
	end
end

function growth()
	hitTool = getObjectFromGUID('10e61e')
	hitTool.call("reshuffle_hitLocations")
	startLuaCoroutine(self, "set_trap")
end

function set_trap()
	wait(3)
	local zone = getObjectFromGUID(Global.getTable('zones').deckHitLocations.guid)
	for _, obj in ipairs(zone.getObjects()) do
		if obj.tag == "Deck" then
			deck = obj
			break
		end
	end
	local pos = deck.getPosition()
	for _, card in ipairs(deck.getObjects()) do
		if card.nickname == "Flesh Pollination" then
			deck.takeObject({
				position 		= {pos.x, pos.y + 2, pos.z},
				rotation 		= {0,180,0},
				smooth 			= true,
				guid 				= card.guid,
				callback 		= "flipCard",
				callback_owner = Global})
		end
	end
	return 1
end

function wait(time)
   local start = os.time()
   repeat coroutine.yield(0) until os.time() > start + time
end