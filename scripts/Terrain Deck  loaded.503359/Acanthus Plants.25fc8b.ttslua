-------------------------------
--KDM terrain card script
---------------------------------

------------------------------
--Globals
---------------------------
terrainType = ''
terrainBagGUID = ''


--------------------------
--Init
----------------------------
function onLoad()

	self.createButton({
		click_function = 'spawnTiles',
		function_owner = self,
		label = '+',
		position = {0.9,0.3,-1.4},
		rotation = {0,0,0},
		width = 150,
		height = 150,
		font_size = 150
	})

end

---------------------------
--functions
----------------------------

function spawnTiles()

	startLuaCoroutine(self,'spawnCoroutine_1')
	startLuaCoroutine(self,'spawnCoroutine_2')
end

function spawnCoroutine_1()

	terrainType = self.getName()
	local bagTable = Global.getTable('bags')
	terrainBagGUID = bagTable.terrain.guid
	local terrainBag = getObjectFromGUID(terrainBagGUID)
	local cloneBag = terrainBag.clone({position = {100,100,-100}})
	coroutine.yield(0)
	cloneBag.lock()
	cloneBag.setScale({0,0,0})

	shuffle_posX(posX_table)
	 posX = posX_table[1]
	table.remove(posX_table, 1)

	shuffle_posZ(posZ_table)
	 posZ = posZ_table[1]
	table.remove(posZ_table, 1)

	local objects = cloneBag.getObjects()
	for k, v in pairs(objects) do
		if v.name == terrainType then
			local guid = v.guid
			local params = {}
			params.guid = guid
			params.position = {posX, 4.33, posZ}
			params.position = {params.position[1],params.position[2], params.position[3]}
			params.rotation = self.getRotation ()
			local object = cloneBag.takeObject(params)
			break
		end
	end
	broadcastToAll("Randomizing " .. self.getName() .. " ~ Make Final Adjustments", {1,1,1})
	cloneBag.destruct()
	return 1
end

function spawnCoroutine_1()

	terrainType = self.getName()
	local bagTable = Global.getTable('bags')
	terrainBagGUID = bagTable.terrain.guid
	local terrainBag = getObjectFromGUID(terrainBagGUID)
	local cloneBag = terrainBag.clone({position = {100,100,-100}})
	coroutine.yield(0)
	cloneBag.lock()
	cloneBag.setScale({0,0,0})

	shuffle_posX(posX_table)
	 posX = posX_table[1]
	table.remove(posX_table, 1)

	shuffle_posZ(posZ_table)
	 posZ = posZ_table[1]
	table.remove(posZ_table, 1)

	local objects = cloneBag.getObjects()
	for k, v in pairs(objects) do
		if v.name == terrainType then
			local guid = v.guid
			local params = {}
			params.guid = guid
			params.position = {posX, 4.33, posZ}
			params.position = {params.position[1],params.position[2], params.position[3]}
			params.rotation = self.getRotation ()
			local object = cloneBag.takeObject(params)
			break
		end
	end
	broadcastToAll("Randomizing " .. self.getName() .. " ~ Make Final Adjustments", {1,1,1})
	cloneBag.destruct()
	return 1
end

offsetX = 1.59
posX_table = {
	-3.98 - offsetX * 6,
	-3.98 - offsetX * 5,
	-3.98 - offsetX * 4,
	-3.98 - offsetX * 3,
	-3.98 - offsetX * 2,
	-3.98 - offsetX,
	-3.98,
	3.98,
	3.98 + offsetX,
	3.98 + offsetX * 2,
	3.98 + offsetX * 4,
	3.98 + offsetX * 4,
	3.98 + offsetX * 5
}

offsetZ = 1.60
posZ_table = {
	18.98,
	18.98 + offsetZ,
	18.98 + offsetZ * 2,
	10.99,
	10.99 - offsetZ,
	10.99 - offsetZ * 2,
	10.99 - offsetZ * 3
}

function shuffle_posX(posX_table)
  sizeX = #posX_table
  for i = sizeX, 1, -1 do
    local rand = math.random(sizeX)
    posX_table[i], posX_table[rand] = posX_table[rand], posX_table[i]
  end
  return posX_table
end

function shuffle_posZ(posZ_table)
  sizeZ = #posZ_table
  for i = sizeZ, 1, -1 do
    local rand = math.random(sizeZ)
    posZ_table[i], posZ_table[rand] = posZ_table[rand], posZ_table[i]
  end
  return posZ_table
end
