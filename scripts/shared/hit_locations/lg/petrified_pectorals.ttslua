function criticalWoundEffect()
	getVars()
	for i, v in ipairs(drawn_hitLocations) do
		 if v.getGUID() == self.getGUID() then
			  table.remove(drawn_hitLocations, i)
		 end
	end
	hitTool.setTable("drawn_hitLocations", drawn_hitLocations)
	self.setPositionSmooth({0.07, 4.26, -17.97})
	Global.call('addBroadcast', {"crit", {gear = "Persistent Injury ~ Hematoma ~ Keep in Play", effect = ""}})
end

function woundEffect()
end

function failureEffect()
	obj = getObjectFromGUID(Global.getTable('tokSpawn').pos_tgh.guid)
	local var = "endOfround"
	obj.getVar("phase")
	obj.setVar("phase", var)
	startLuaCoroutine(self, "addStat_coR")
	Global.call('addBroadcast', {"failure", {gear = "The Lion God gained a (+2) Toughness until the End of the Round", effect = ""}})
end

function addStat_coR()
	obj.call('spawn_token')
	wait(0.50)
	obj.call('spawn_token')
	return 1
end

-- Coroutine timer
function wait(time)
	local start = os.time()
	--each frame the coroutine is given control back, but we immediately call coroutine.yield() again until we exceed the time limit
	repeat coroutine.yield(0) until os.time() > start + time
end

function reflexEffect()
end

function addStatModifier()
end

#include ../get_vars


-- pectorals
