function criticalWoundEffect()
	getMonsterResource()
end

function getMonsterResource()
	getVars()
	local tbl = {cardName = nil, zone = getObjectFromGUID(Global.getTable('zones').deckMonsterResources.guid), deck = ""}
	Global.setTable("card", tbl)
	Global.setTable("pos_toSpawn", pos)
	Global.call("get_Card")
	Global.call('addBroadcast', {"crit", {gear = "You gained 1 Random Screaing Antelope Resource", effect = ""}})
end

function woundEffect()
	Global.call('addBroadcast', {"wound_reaction", {gear = "If the Wound Result is Even ~ Suffer 1 Brain Damage", effect = "If the Wound Result is Odd ~ Gain (+1) Insanity"}})
end

function failureEffect()
end

function reflexEffect()
end

function addStatModifier()
	getVars()
	obj = getObjectFromGUID(Global.getTable('tokSpawn').neg_tgh.guid)
	local var = "endOfwoundattempt"
	obj.getVar("phase")
	obj.setVar("phase", var)
	broadcastToAll("(-2) Toughness to Wound This Location Calculated", msg_color)
	startLuaCoroutine(self, "addStat_coR")
end

function addStat_coR()
	wait(0.25)
	obj.call('spawn_token')
	wait(0.25)
	obj.call('spawn_token')
	return 1
end

function getVars()
	local card = getObjectFromGUID(Global.getTable("persistentCard").card.guid)
	local bool = card.getVar("isSurging_persistentCard")
	if bool then
		roller = getObjectFromGUID(Global.getTable("rollers").left.guid)
	end
	if not bool then
		roller = getObjectFromGUID(Global.getTable("rollers").right.guid)
	end

	grid = roller.getVar("grid")
	zone = grid.getVar("zonePlayer")
	pos = grid.getTable("gained_resource_pos")
	msg_color = grid.getTable("msg_color")
end

-- Coroutine timer
function wait(time)
	local start = os.time()
	--each frame the coroutine is given control back, but we immediately call coroutine.yield() again until we exceed the time limit
	repeat coroutine.yield(0) until os.time() > start + time
	end
