function criticalWoundEffect()
	getVars()
	for i, v in ipairs(drawn_hitLocations) do
		if v.getGUID() == self.getGUID() then
			table.remove(drawn_hitLocations, i)
		end
	end
	hitTool.setTable("drawn_hitLocations", drawn_hitLocations)
	self.setPositionSmooth({2.16, 4.33, -21.57})
	Global.call('addBroadcast', {"crit", {gear = "Persistent Injury ~ Broken Blade ~ Keep in Play", effect = ""}})

	local obj = getObjectFromGUID(Global.getTable('tokSpawn').neg_dmg.guid)
	local var = ""
	obj.getVar("phase")
	obj.setVar("phase", var)
	obj.call("spawn_token")
	Global.call('addBroadcast', {"crit", {gear = "The Dung Beetle Knight gained a (-1) Damage Token AND suffers Knockback 5", effect = ""}})
	getMonsterResource()
end

--Finds a named card, in a deck, in a zone, then draws it to specified location.
function getMonsterResource()
	local zone = getObjectFromGUID(Global.getTable('zones').zoneGearDeck.guid)
	for _, obj in ipairs(zone.getObjects()) do
		if obj.tag == "Deck" then
			deckGear = obj
			break
		end
	end

	local tbl = {cardName = "Regenerating Blade", zone = "", deck = deckGear}
	Global.setTable("card", tbl)
	Global.setTable("pos_toSpawn", pos)
	Global.call("get_Card")
	local bool = Global.getVar("card_Found")
	if bool then
		Global.call('addBroadcast', {"crit", {gear = "You gained 1 Regenerating Blade", effect = ""}})
	else
		Global.call('addBroadcast', {"crit", {gear = "There are no more Regenerating Blades", effect = ""}})
	end
end

#include ../get_vars

function woundEffect()
end

function failureEffect()
    Global.call('addBroadcast', {"failure", {gear = "Perform Basic Action ~ Targeting the Attacker", effect = ""}})
end

function reflexEffect()
end

function addStatModifier()
end
