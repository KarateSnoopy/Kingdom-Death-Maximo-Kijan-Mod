--------------------------------------------------------------------------------
--                           TABLE OF CONTENTS                                --
--                   Scripts created by Maximo and Kijan                      --
--------------------------------------------------------------------------------


-- Start the Showdown ----------------------------------------------------------
	-- function callStartShowdown_Functions
	-- function startShowdown
	-- function startShowdownChecks
	-- function build_deckAI
	-- function checkSongOfTheBrave
	-- function check_crimson_candy
	-- function checkSunstalker_spawnStartingShadows
	-- function randomize_role_cards_Lion_Knight
	-- function update_avatar_display_stats


-- Utility Functions -----------------------------------------------------------
	-- function changeAllSurvivors
	-- function changeSurvivors
	-- function wait
	-- function play_music_track
	-- set_terrain_deck_desc


-- Buttons ---------------------------------------------------------------------
	-- function createButtons



-- END TABLE OF CONTENTS -------------------------------------------------------

#include ../util

function onLoad()
	createButtons()
	nextRoundTool = getObjectFromGUID('b94669')
	zoneInjuryBoard = getObjectFromGUID(Global.getTable('zones').zoneInjuryBoard.guid)
	zoneInnovations = getObjectFromGUID(Global.getTable('zones').zoneInnovations.guid)
end




-- Start the Showdown ----------------------------------------------------------
function callStartShowdown_Functions()
	if isCampaignLoaded() == false then
		goToCampaignStartButton()
		return
	end

	self.clearButtons()
	self.setPosition({ - 0.16, 0, - 5.33})
	if self.getDescription() == "prologue" then
		self.setDescription("showdown started")
		return
	end

	build_deckAI()
	checkSongOfTheBrave()
	checkSunstalker_spawnStartingShadows()
	randomize_role_cards_Lion_Knight()
	play_music_track()
	set_terrain_deck_desc()

	startLuaCoroutine(self, "startShowdown")
	--storeSurvDiedMarkers() -- deprecate if unused
end

function set_terrain_deck_desc()
	local zone = getObjectFromGUID('30eacb')
	for _, obj in ipairs(zone.getObjects()) do
		if obj.tag == "Deck" then
			deck = obj
			break
		end
	end
	deck.setDescription("monster, terrain")
end

function startShowdown()
	self.setDescription("showdown started")
	local gridTable = Global.getTable('grids')
	local zonesTable = Global.getTable('zones')
	local players = {player1 = {getObjectFromGUID(gridTable.red.guid), getObjectFromGUID(zonesTable.zoneP1.guid), "Player 1"},
		player2 = {getObjectFromGUID(gridTable.yellow.guid), getObjectFromGUID(zonesTable.zoneP2.guid), "Player 2"},
		player3 = {getObjectFromGUID(gridTable.green.guid), getObjectFromGUID(zonesTable.zoneP3.guid), "Player 3"},
		player4 = {getObjectFromGUID(gridTable.blue.guid), getObjectFromGUID(zonesTable.zoneP4.guid), "Player 4"}
	}
	wait(4)
	for _, player in pairs(players) do
		startShowdownChecks(player[1], player[2], player[3])
	end

	for _, card in ipairs(zoneInjuryBoard.getObjects()) do

		-- Musth
		if card.getName() == "Musth" then
			broadcastToAll("☠ Musth ~ Survivors with 3 or Less Hunt XP must gain (-2) Accuracy and (+2) Strength Tokens ☠", {1,1,1})

		-- Monochrome
		elseif card.getName() == "Monochrome" then
			local card_toGet = {cardName = "Black Blood Red", zone = "", deck = getObjectFromGUID(Global.getTable('decks_toSearch').deckSURV_STATUS.guid)}
			Global.setTable("card", card_toGet)
			local pos_toSpawn = {-24.93, 4.19, -24.23}
			Global.setTable("pos_toSpawn", pos_toSpawn)
			Global.call("get_Card")

			local card_toGet = {cardName = "Black Blood Yellow", zone = "", deck = getObjectFromGUID(Global.getTable('decks_toSearch').deckSURV_STATUS.guid)}
			Global.setTable("card", card_toGet)
			local pos_toSpawn = {-8.25, 4.19, -24.23}
			Global.setTable("pos_toSpawn", pos_toSpawn)
			Global.call("get_Card")

			local card_toGet = {cardName = "Black Blood Green", zone = "", deck = getObjectFromGUID(Global.getTable('decks_toSearch').deckSURV_STATUS.guid)}
			Global.setTable("card", card_toGet)
			local pos_toSpawn = {21.87, 4.19, -24.23}
			Global.setTable("pos_toSpawn", pos_toSpawn)
			Global.call("get_Card")

			local card_toGet = {cardName = "Black Blood Blue", zone = "", deck = getObjectFromGUID(Global.getTable('decks_toSearch').deckSURV_STATUS.guid)}
			Global.setTable("card", card_toGet)
			local pos_toSpawn = {38.51, 4.19, -24.23}
			Global.setTable("pos_toSpawn", pos_toSpawn)
			Global.call("get_Card")

		end
	end

	return 1
end

function startShowdownChecks(grid, zone, name)
	local broadcastTable = {}
	local survival = tonumber(getObjectFromGUID(grid.getVar("FullCharSheetGUID")).getTable("buttons").survival.label)
	local insanity = tonumber(getObjectFromGUID(grid.getVar("FullCharSheetGUID")).getTable("buttons").insanity.label)
	local tokSpawn_lck = grid.getVar("tokSpawn_lck")
	local tokSpawn_eva = grid.getVar("tokSpawn_eva")
	local tokSpawn_str = grid.getVar("tokSpawn_str")

	if grid.getVar("FullCharSheetGUID") == '' or grid.getVar("FullCharSheetGUID") == nil then
		table.insert(broadcastTable, "~~~~~~~[b]" .. name .. "[/b] Died" .. "~~~~~~~")
	else
		table.insert(broadcastTable, "~~~~~~~[b]" .. name .. " Start of Showdown Effects[/b]~~~~~~~")
	end

	--Checks zone for start of showdown effects
	local objectsInZone = zone.getObjects()
	for _, object in ipairs(objectsInZone) do

		-- Anxiety [DONE]
		if object.getName() == "Anxiety" then
			table.insert(broadcastTable, "[b]Anxiety[/b]: You gain the Priority Target Token unless you have 'Stinky' gear")

		-- Trailblazer[DONE]
		elseif object.getName() == "Trailblazer" and object.getRotation().z < 165 then
			table.insert(broadcastTable, "[b]Trailblazer[/b]: All Survivors gained (+1) Survival and (+1) Insanity")
			changeAllSurvivors("survival", 1)
			changeAllSurvivors("insanity", 1)

		-- Elder Earrings	[DONE]
		elseif object.getName() == "Elder Earrings" then
			table.insert(broadcastTable, "[b]Elder Earrings[/b]: You gained (+2) Survival")
			changeSurvivors("survival", 2, grid)

		-- First Aid Kit [DONE]
		elseif object.getName() == "First Aid Kit" then
			table.insert(broadcastTable, "[b]First Aid Kit[/b]: All Survivors gained (+3) Survival")
			changeAllSurvivors("survival", 3)

		-- Phoenix Helm
		--TODO; phoenix helm
		elseif (object.getName() == "Phoenix Helm" and object.getRotation().z > 90) and ((object.getName() == "isInsane" and object.getRotation().z > 165 and object.getRotation().z < 195) or (insanity >= 3)) then
			table.insert(broadcastTable, "[b]Phoenix Helm[/b]: You are Insane ~ Gain a (+1) Evasion Token")
			tokSpawn_eva.call("spawn_token")

		-- Rawhide Drum [DONE]
		elseif object.getName() == "Rawhide Drum" then
			table.insert(broadcastTable, "[b]Rawhide Drums[/b]: All Survivors gain (+1) Insanity")
			changeAllSurvivors("insanity", 1)

		-- Bone Earrings [DONE]
		elseif ((insanity >= 3) or (object.getName() == "isInsane" and object.getRotation().z > 165 and object.getRotation().z < 195)) and object.getName() == "Bone Earrings" then
			table.insert(broadcastTable, "[b]Bone Earrings[/b]: If all your gear has the 'Bone' Keyword then....")

		-- Bug Trap [DONE]
		elseif object.getName() == "Bug Trap" then
			table.insert(broadcastTable, "[b]Bug Trap[/b]: Roll 1d10 ~ On a 3+ ~ Add a Bug Patch Terrain to the Showdown Board")

		-- Courtly Screenwriter
		elseif object.getName() == "Courtly Screenwriter" and object.getRotation().z < 165 then
			table.insert(broadcastTable, "[b]Courtly Screenwriter[/b]: Resolve effects on this card")

		-- Flower Knight Badge [DONE]
		elseif object.getName() == "Flower Knight Badge" then
			table.insert(broadcastTable, "[b]Flower Knight Badge[/b]: Draw 1 Tactics Card")
			tokSpawn_eva.call("spawn_token")

		-- DBK Errant Badge [DONE]
		elseif object.getName() == "DBK Errant Badge" then
			table.insert(broadcastTable, "[b]DBK Errant Badge[/b]: Draw 1 Tactics Card")

		-- Lion Knight Badge [DONE]
		elseif object.getName() == "Lion Knight Badge" then
			table.insert(broadcastTable, "[b]Lion Knight Badge[/b]: Draw 1 Tactics Card")

		-- Vespertine Cello
		--TODO vespertine cello
		elseif object.getName() == "Vespertine Cello" then
			table.insert(broadcastTable, "[b]Vespertine Cello[/b]: All Survivors with an Instrument gain a (+1) Luck Token")

		-- Lantern Mehndi [DONE]
		elseif object.getName() == "Lantern Mehndi" and object.getRotation().z > 165 then
			table.insert(broadcastTable, "[b]Lantern Mehndi[/b]: You may start the Showdown in any unoccupied space")

		-- Dragon Mantle [DONE]
		elseif object.getName() == "Dragon Mantle" and object.getRotation().z > 165 then
			table.insert(broadcastTable, "[b]Dragon Mantle[/b]: You beat your chest mightily and gain Survival up to the Limit")

		-- Sun Eater [DONE]
		elseif object.getName() == "Sun Eater" and object.getRotation().z < 165 then
			table.insert(broadcastTable, "[b]Sun Eater[/b]: Gain Survival up to the Limit")

		-- Swordsman's Promise [DONE]
		elseif object.getName() == "Swordsman's Promise" and object.getRotation().z < 165 then
			table.insert(broadcastTable, "[b]Swordsman's Promise[/b]: If you have a Sword in your Grid ~ Gain Survival up to the Limit")

		-- Stone Noses [DONE]
		elseif object.getName() == "Stone Noses" then
			table.insert(broadcastTable, "[b]Stone Noses[/b]: You gained (+1) Survival and (+1) Insanity")
			changeSurvivors("survival", 1, grid)
			changeSurvivors("insanity", 1, grid)

		-- Whisker Harp [DONE]
		elseif object.getName() == "Whisker Harp" then
			table.insert(broadcastTable, "[b]Whisker Harp[/b]: All Survivors gained (+1) Survival")
			changeAllSurvivors("survival", 1)

		-- Screaming Leg Warmers [DONE]
		elseif object.getName() == "Screaming Leg Warmers" then
			table.insert(broadcastTable, "[b]Screaming Leg Warmers[/b]: On Arrival, your feet hurt ~ You gained (+3) Insanity")
			changeSurvivors("insanity", 3, grid)

		-- Green Plate [DONE]
		elseif object.getName() == "Green Plate" then
			table.insert(broadcastTable, "[b]Green Plate[/b]: Draw 3 Tactics Cards")

		-- Rhythm Chaser [DONE]
		elseif object.getName() == "Rhythm Chaser" then
			tokSpawn_eva.call('spawn_token')
			table.insert(broadcastTable, "[b]Rhythm Chaser[/b]: You gained a (+1) Evasion Token")
		end

		-- Red Fist
		hasRedFist = false
		if object.getName() == "Red Fist" then
			hasRedFist = true
			tokSpawn_str.call("spawn_token")
			table.insert(broadcastTable, "[b]Red Fist[/b]: All Survivors gained a (+1) Strength Token")
		end
	end

	if hasRedFist then
		local stats = {color = "red", stat = "str", modifier = "pos", num = 1, phase = nil}
		Global.setTable('stats_red', stats)
		startLuaCoroutine(Global, "spawn_tok_red")

		local stats = {color = "yellow", stat = "str", modifier = "pos", num = 1, phase = nil}
		Global.setTable('stats_yellow', stats)
		startLuaCoroutine(Global, "spawn_tok_yellow")

		local stats = {color = "green", stat = "str", modifier = "pos", num = 1, phase = nil}
		Global.setTable('stats_green', stats)
		startLuaCoroutine(Global, "spawn_tok_green")

		local stats = {color = "blue", stat = "str", modifier = "pos", num = 1, phase = nil}
		Global.setTable('stats_blue', stats)
		startLuaCoroutine(Global, "spawn_tok_blue")
	end

	--Broadcast msg in delays by player
	if #broadcastTable > 0 then
		for _, b in pairs(broadcastTable) do
			broadcastToAll(b, {1, 1, 1})
			wait(0.5)
		end
		wait(1.5)
	end
	return 1
end

function build_deckAI()
	local zone = getObjectFromGUID(Global.getTable('zones').zoneAIBoard.guid)
	for _, obj in ipairs(zone.getObjects()) do
		if string.find(obj.getName(), "Build AI Deck") then
			obj.call("buildDeck")
		end
	end
end

function checkSongOfTheBrave()
	local objectsInZone = zoneInnovations.getObjects()
	for _, object in ipairs(objectsInZone) do
		if object.getName() == "Song of the Brave" then
			broadcastToAll("Song of the Brave ~ All non-deaf Survivors may remove one Negative Stat Token", {1, 1, 1})
		end
	end
end

function check_crimson_candy()
	local objectsInZone = zoneInnovations.getObjects()
	for _, object in ipairs(objectsInZone) do
		if object.getName() == "Crimson Candy" then
			broadcastToAll("Crimson Candy ~ ALL Survivors gain survival equal to ★", {1, 1, 1})
			broadcastToAll("> Manually adjust this now <", {1,1,1})
		end
	end
end

function checkSunstalker_spawnStartingShadows()
	hasSunstalkerLoaded = false
	local zone = getObjectFromGUID(Global.getTable('zonesDestruct').zoneShowdown.guid)
	for _, obj in ipairs(zone.getObjects()) do
		if obj.getName() == "Sunstalker" then
			hasSunstalkerLoaded = true
		end
	end
	if hasSunstalkerLoaded then
		for _, obj in ipairs(zone.getObjects()) do
			if obj.getName() == "Shadow Right" and obj.tag == "Bag" then
				obj.call("buttonClick_place")
			elseif obj.getName() == "Player One" then
				obj.setPosition({-16.80, 4.22, 17.38})
				obj.setRotation({0, 45.00, 0})
			elseif obj.getName() == "Player Two" then
				obj.setPosition({-16.80, 4.22, 14.22})
				obj.setRotation({0, 0, 0})
			elseif obj.getName() == "Player Three" then
				obj.setPosition({-16.80, 4.21, 11.05})
				obj.setRotation({0, 90, 0})
			elseif obj.getName() == "Player Four" then
				obj.setPosition({-16.80, 4.22, 20.57})
				obj.setRotation({0, 45.00, 0})
			end
		end
	end
end

function randomize_role_cards_Lion_Knight()
	found_board = false
	for _, obj in ipairs(zoneInjuryBoard.getObjects()) do
		if obj.getName() == "Lion Knight" then
			found_board = true
			board = obj
			break
		end
	end
	if found_board then
		board.call("randomize_roles")
	end
end

function update_avatar_display_stats()
	local grid_red = getObjectFromGUID(Global.getTable('grids').red.guid)
	startLuaCoroutine(grid_red, "set_portrait_buttons")
	local grid_yellow = getObjectFromGUID(Global.getTable('grids').yellow.guid)
	startLuaCoroutine(grid_yellow, "set_portrait_buttons")
	local grid_green = getObjectFromGUID(Global.getTable('grids').green.guid)
	startLuaCoroutine(grid_green, "set_portrait_buttons")
	local grid_blue = getObjectFromGUID(Global.getTable('grids').blue.guid)
	startLuaCoroutine(grid_blue, "set_portrait_buttons")
end





-- Utility Functions -----------------------------------------------------------
function changeAllSurvivors(location, amount)
	grids = Global.getTable("grids")
	for i, v in pairs(grids) do
		obj = getObjectFromGUID(getObjectFromGUID(v.guid).getVar("FullCharSheetGUID"))
		obj.call("add", {location, amount})
	end
end

function changeSurvivors(location, amount, grid)
	obj = getObjectFromGUID(grid.getVar("FullCharSheetGUID"))
	obj.call("add", {location, amount})
end

function wait(time)
  local start = os.time()
  --each frame the coroutine is given control back, but we immediately call coroutine.yield() again until we exceed the time limit
  repeat coroutine.yield(0) until os.time() > start + time
end

function play_music_track()
	local set_Sound = getObjectFromGUID(Global.getTable('user_settings').set_Sound.guid)
	local rotZ = set_Sound.getRotation().z
	if rotZ < 10 or rotZ > 350 then
		local music_player = getObjectFromGUID(Global.getTable('user_settings').music_player.guid)
		local showdown_phase_soundtrack = getObjectFromGUID(Global.getTable('user_settings').showdown_phase_soundtrack.guid)
		local track = tonumber(showdown_phase_soundtrack.getDescription())
		if music_player ~= nil then
			music_player.AssetBundle.playLoopingEffect(track)
		end
	end
end

function set_terrain_deck_desc()
	local zone = getObjectFromGUID('30eacb')
	for _, obj in ipairs(zone.getObjects()) do
		if obj.tag == "Deck" then
			deck = obj
			break
		end
	end
	deck.setDescription("monster, terrain")
end




-- Buttons ---------------------------------------------------------------------
function createButtons()
	self.createButton({click_function = "callStartShowdown_Functions", function_owner = self, label = "Start Showdown",
	position = {0, 0.2, 0.73}, rotation = { - 10, 0, 0}, scale = {0.5, 0.5, 0.5}, width = 1500, height = 300, font_size = 200,
	color = {0, 0, 0, 0}, font_color = {1, 1, 1, 100}})
end


-- deprecate if unused ?? after change to new surv died tokens
--[[function storeSurvDiedMarkers()
	local zone = getObjectFromGUID(Global.getTable('zonesDestruct').zoneSurvivorStatus.guid)
	local objectsInZone = zone.getObjects()
	for _, object in ipairs(objectsInZone) do
		if object.getName() == "Survivor Died" then
			object.setLock(false)
			object.setPosition({ - 4.33, 7.20, - 53.08})
		end
	end
end]]

-- start showdown
