function onLoad()
	createButtons()
	--createSearch()
end


-------------------------------------------------------------------------------
-- Spawn Tokens Monster
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- Get Named Card from Deck in a Zone
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- Rename Cards In Zone > rename_desc_cardsInZone()
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- Get Insanity Value from Playersheet
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- Count Missed Dice
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- Animation Test
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- Messages to copy/paste
-------------------------------------------------------------------------------

function createButtons()
	self.createButton({click_function = "rename_desc_cardsInZone1", function_owner = self, label = "test1", position = {0, 0.1, 0},
	scale = {0.5, 0.5, 0.5}, width = 6000, height = 1200, font_size = 800, color = {0, 0, 0, 1}, font_color = {1, 1, 1, 1}})

	self.createButton({click_function = "rename_desc_cardsInZone2", function_owner = self, label = "test2", position = {0, 0.1, 3},
	scale = {0.5, 0.5, 0.5}, width = 6000, height = 1200, font_size = 800, color = {0, 0, 0, 1}, font_color = {1, 1, 1, 1}})

	self.createButton({click_function = "rename_desc_cardsInZone3", function_owner = self, label = "test3", position = {0, 0.1, 6},
	scale = {0.5, 0.5, 0.5}, width = 6000, height = 1200, font_size = 800, color = {0, 0, 0, 1}, font_color = {1, 1, 1, 1}})

	self.createButton({click_function = "rename_desc_cardsInZone4", function_owner = self, label = "test4", position = {0, 0.1, 9},
	scale = {0.5, 0.5, 0.5}, width = 6000, height = 1200, font_size = 800, color = {0, 0, 0, 1}, font_color = {1, 1, 1, 1}})

	self.createButton({click_function = "getcolor1", function_owner = self, label = "test5", position = {0, 0.1, 12},
	scale = {0.5, 0.5, 0.5}, width = 6000, height = 1200, font_size = 800, color = {0, 0, 0, 1}, font_color = {1, 1, 1, 1}})

	self.createButton({click_function = "test6", function_owner = self, label = "test6", position = {0, 0.1, 15},
	scale = {0.5, 0.5, 0.5}, width = 6000, height = 1200, font_size = 800, color = {0, 0, 0, 1}, font_color = {1, 1, 1, 1}})

	self.createButton({click_function = "test7", function_owner = self, label = "test7", position = {0, 0.1, 18},
	scale = {0.5, 0.5, 0.5}, width = 6000, height = 1200, font_size = 800, color = {0, 0, 0, 1}, font_color = {1, 1, 1, 1}})

	self.createButton({click_function = "test8", function_owner = self, label = "test8", position = {0, 0.1, 21},
	scale = {0.5, 0.5, 0.5}, width = 6000, height = 1200, font_size = 800, color = {0, 0, 0, 1}, font_color = {1, 1, 1, 1}})

end

function getcolor1()
	local obj = getObjectFromGUID('201b89')
	print(obj.getColorTint().r)
	print(obj.getColorTint().b)
	print(obj.getColorTint().b)
end

function getcolor2()
	local obj = getObjectFromGUID('1362fa')
	print(obj.getColorTint().r)
	print(obj.getColorTint().b)
	print(obj.getColorTint().b)
end


function test6()
	startLuaCoroutine(self, "spawn_tok_red_coR")
end

function spawn_tok_red_coR()
	wait(0.2)

	local stats = {color = "red", stat = "mov", modifier = "neg", num = age_count_red, phase = "haze"}
	Global.setTable('stats_red', stats)
	startLuaCoroutine(Global, "spawn_tok_red")

	--[[wait(1)

	local stats = {color = "red", stat = "spd", modifier = "neg", num = age_count_red, phase = "haze"}
	Global.setTable('stats_red', stats)
	startLuaCoroutine(Global, "spawn_tok_red")]]

	return 1
end

function test7()
	local display_hit_queue = getObjectFromGUID('818dc7')
	local display_wound_queue = getObjectFromGUID('802f92')
	display_hit_queue.setPosition({26.22, 4.15, -6.24})
	display_wound_queue.setPosition({29.54, 4.15, -6.27})
end


function test8()
	local zone = getObjectFromGUID(Global.getTable('zonesDestruct').zoneShowdown.guid)
	for _, obj in ipairs(zone.getObjects()) do

		if obj.getName() == "Fighting Arts" then
			obj.setScale({0.88, 1.00, 0.88})
			obj.setPosition({-6.49, 1.51, -96.32})

		elseif obj.getName() == "Secret Fighting Arts" then
			obj.setScale({0.88, 1.00, 0.88})
			obj.setPosition({-4.48, 1.51, -96.29})

		elseif obj.getName() == "Disorders" then
			obj.setScale({0.88, 1.00, 0.88})
			obj.setPosition({-2.60, 1.52, -96.29})

		elseif obj.getName() == "Innovations" then
			obj.setScale({1.12, 1.00, 1.12})
			obj.setPosition({-56.03, 4.33, 22.58})

		elseif obj.getName() == "Tactics" then
			obj.setScale({0.97, 1.00, 0.97})
			obj.setPosition({-21.65, 4.29, 7.43})

		elseif obj.getName() == "Strange Resources" then
			obj.setScale({1.10, 1.00, 1.10})
			obj.setPosition({55.14, 4.34, 15.53})
		end
	end
end


list = {}

function test8_coR()
	for k, v in ipairs(list) do
		local stats = v
		local wait_time = stats.num * 0.25 + 0.25
		Global.setTable('temp', stats)
		startLuaCoroutine(Global, "spwn_tok")
		wait(wait_time)
	end
	list = {}
	return 1
end






-- Coroutine timer
function wait(time)
   local start = os.time()
   repeat coroutine.yield(0) until os.time() > start + time
end

function createOffset()
	local i = 0
	return function ()
		i = i + 1
		return i
	end
end








-------------------------------------------------------------------------------
-- Messages to copy/paste
-------------------------------------------------------------------------------
--Global.call('addBroadcast', {"crit", {gear = "Persistent Injury ~ Keep In Play", effect = ""}})

-------------------------------------------------------------------------------
-- Get Named Card from Deck in a Zone
-------------------------------------------------------------------------------
--Finds a named card, in a deck, in a zone, then draws it to specified location.
--[[function getMonsterResource(deck, name, params)
	local zone = getObjectFromGUID(Global.getTable('zones').deckMonsterResources.guid)
  for _, object in ipairs(zone.getObjects()) do
    local name = object.getName()
    if name == "White Lion Resources Deck" then
			deck = object
			break
    end
	end
  local cardsInDeck = deck.getObjects()
  for i, card in ipairs(cardsInDeck) do
    if card.nickname == "Lion Tail" then
			deck.takeObject({guid = card.guid,position={7.60, 4.19, -11.03},callback="flipCard",callback_owner=Global,})
			Global.call('addBroadcast', {"crit", {gear = "You gained 1 Lion Tail", effect = ""}})
			break
		end
    if i == #cardsInDeck then
      Global.call('addBroadcast', {"crit", {gear = "You already hacked off the Lion's Tail", effect = ""}})
    end
  end
end]]

function getReactions_Status(cancelled)
	hitTool = getObjectFromGUID('10e61e')
	local btns = hitTool.getButtons()
	cancelled = false
	for i, v in pairs(btns) do
		if v.label == "Reactions Cancelled" then
			cancelled = true
		else
			cancelled = false
		end
	end
	return cancelled
end



-------------------------------------------------------------------------------
-- Rename Cards In Zone
-------------------------------------------------------------------------------

function rename_desc_cardsInZone1()
	local zone = getObjectFromGUID('9d720b')
	for _, obj in ipairs(zone.getObjects()) do
		if obj.tag == "Bag" then
			obj.setDescription("monster, backup, quarry")
		end
	end
end

function rename_desc_cardsInZone2()
	local zone = getObjectFromGUID('9d720b')
	for _, obj in ipairs(zone.getObjects()) do
		if obj.tag == "Bag" then
			obj.setDescription("monster, backup, nemesis")
		end
	end
end

function rename_desc_cardsInZone3()
	local zone = getObjectFromGUID('9d720b')
	for _, card in ipairs(zone.getObjects()) do
		if card.tag == "Card" then
			card.setDescription("essential, character, ability, archive")
		end
	end
end

function rename_desc_cardsInZone4()
	local zone = getObjectFromGUID('9d720b')
	for _, card in ipairs(zone.getObjects()) do
		if card.tag == "Card" then
			card.setDescription("essential, character, injury, archive")
		end
	end
end

function getButtonLabels()
	local obj = getObjectFromGUID('9eaa8a')
	local btns = obj.getButtons()
	for i, v in pairs(btns) do
		local btn = v.label
		if string.find(btn, "setup_") then
			self.removeButton(v.index)
		end
	end
end

-------------------------------------------------------------------------------
-- Get Insanity Value from Playersheet
-------------------------------------------------------------------------------
function get_Insanity_Value(insanity_value)
	local grid = getObjectFromGUID(Global.getTable('grids').red.guid)
	local insanity_value = tonumber(getObjectFromGUID(grid.getVar("FullCharSheetGUID")).getTable("buttons").insanity.label)
	return insanity_value
end

-------------------------------------------------------------------------------
-- Count Missed Dice
-------------------------------------------------------------------------------
function countMissed()
	local zone = getObjectFromGUID("d2f7eb")
	count_missed = 0
	for _, object in ipairs(zone.getObjects()) do
		if object.tag == "Dice" then
			local color = object.getColorTint()
			if color.r < 0.15 and color.g < 0.15 and color.b < 0.15 then
				count_missed = count_missed + 1
			end
		end
	end
	print(count_missed)
end

-------------------------------------------------------------------------------
-- Animation Test
-------------------------------------------------------------------------------
function getPos(model_pos, model)
	local zone = getObjectFromGUID(Global.getTable('zonesDestruct').zoneShowdown.guid)
	for _, model in ipairs(zone.getObjects()) do
		if model.getName() == "Resin Dung Ball" then
			model_pos = model.getPosition()
			model = model.getGUID()
		end
	end
	return model_pos, model
end

function startAnimation()
	startLuaCoroutine(self, 'animate')
end

function animate()
	dung_ball = getObjectFromGUID('6807ba')
	local zone = getObjectFromGUID(Global.getTable('zonesDestruct').zoneShowdown.guid)
	for _, model in ipairs(zone.getObjects()) do
		if model.getName() == "Resin Dung Ball" then
			model_pos = model.getPosition()
		end
	end

	model_pos.x = model_pos.x + 3.15
	model_pos.y = model_pos.y + 0.2
	dung_ball.setPositionSmooth(model_pos, true, false)

	wait(0.4)
	model_pos.z = model_pos.z - 6.30
	dung_ball.setPositionSmooth(model_pos, true, false)

	wait(0.6)
	model_pos.x = model_pos.x - 6.30
	dung_ball.setPositionSmooth(model_pos, true, false)

	wait(0.6)
	model_pos.z = model_pos.z + 6.30
	dung_ball.setPositionSmooth(model_pos, true, false)

	--wait(0.6)
	--model_pos.x = model_pos.x - 3.15
	--dung_ball.setPositionSmooth(model_pos, false, false)

	return 1
end

function onCollisionEnter(collision_info)
	object = collision_info.collision_object
	if object.getName() == "Player Four" then
		object.setLock(true)
		self.setLock(true)
	end
end

function testCoroutine()
	local checker_obj = getObjectFromGUID(checker_GUID)
	local checker_pos = checker_obj.getPosition()
	checker_pos.z = checker_pos.z - 10
	checker_obj.setPositionSmooth(checker_pos)
	--because the wait function uses coroutine.yield() repeatedly, the main thread won't be blocked while it is delaying
	wait(1.4)
	print("Come back!")
	checker_pos.z = checker_pos.z + 10
	checker_obj.setPositionSmooth(checker_pos)
	return 1
end

--this is a helper function to make it easier to initiate long pauses in your coroutines that don't block the main thread. You can copy and paste it into your code to make things easier
function wait(time)
	local start = os.time()
	--each frame the coroutine is given control back, but we immediately call coroutine.yield() again until we exceed the time limit
	repeat coroutine.yield(0) until os.time() > start + time
	end

	-- test script tool